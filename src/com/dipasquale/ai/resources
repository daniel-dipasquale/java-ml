neat (main resources):
http://nn.cs.utexas.edu/downloads/papers/stanley.ec02.pdf
http://nn.cs.utexas.edu/downloads/papers/stanley.gecco02_1.pdf
http://nn.cs.utexas.edu/downloads/papers/stanley.phd04.pdf
https://www.heatonresearch.com/encog/ (very good)
https://www.heatonresearch.com/encog/neat/neat_structure.html (very good)
https://neat-python.readthedocs.io/en/latest/xor_example.html
https://www.cs.cmu.edu/afs/cs/project/jair/pub/volume21/stanley04a-html/node3.html
https://www.cs.ucf.edu/~kstanley/neat.html
https://neat-python.readthedocs.io/en/latest/ctrnn.html

to review:
https://github.com/CodeReclaimers/neat-python/issues/124
https://stackoverflow.com/questions/4493554/neural-network-always-produces-same-similar-outputs-for-any-input
https://www.researchgate.net/publication/323131150_The_importance_of_the_activation_function_in_NeuroEvolution_with_FS-NEAT_and_FD-NEAT
https://arxiv.org/pdf/1703.07122.pdf

other stuff:
http://nn.cs.utexas.edu/downloads/papers/AdityaRawalThesis.pdf
https://dev.to/n8python/attempting-and-sort-of-succeeding-to-implement-neat-in-javascript-2ea6
https://ai.stackexchange.com/questions/5496/does-neat-require-only-connection-genes-to-be-marked-with-a-global-innovation-nu

pitStop:
https://ai.stackexchange.com/questions/6231/how-to-evaluate-a-neat-neural-network

neat (other resources):
https://github.com/Luecx/NEAT/blob/master/vid%203/src/data_structures/RandomHashSet.java
https://github.com/colgreen/sharpneat-refactor/blob/master/src/SharpNeat/NeuralNets/Double/NeuralNetAcyclic.cs
https://github.com/hydrozoa-yt/hydroneat/blob/master/src/com/hydrozoa/hydroneat/Genome.java
https://github.com/jeffheaton/encog-java-examples/blob/master/src/main/java/org/encog/examples/neural/neat/XORNEAT.java (very good)
https://github.com/wagenaartje/neataptic/blob/master/src/architecture/architect.js
https://neat-python.readthedocs.io/en/latest/neat_overview.html
https://pastebin.com/ZZmSNaHX
https://vbstudio.hu/en/blog/20190317-Growing-an-AI-with-NEAT
https://wagenaartje.github.io/neataptic/docs/builtins/gru/
https://www.freecodecamp.org/news/how-to-use-ai-to-play-sonic-the-hedgehog-its-neat-9d862a2aef98/
https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2758373/
https://www.youtube.com/watch?v=1I1eG-WLLrY&ab_channel=Hydrozoa
https://www.youtube.com/watch?v=MPFWsRjDmnU&ab_channel=TechWithTim
https://www.youtube.com/watch?v=nhT56blfRpE&ab_channel=KieCodes
https://www.youtube.com/watch?v=vvSjJZDPQVc&ab_channel=FinnEggers

examples (activation):
https://github.com/colgreen/sharpneat-refactor/tree/master/src/SharpNeat/NeuralNets/Double/ActivationFunctions
https://github.com/wagenaartje/neataptic/blob/master/src/methods/activation.js

examples (simulations):
https://www.reddit.com/r/learnmachinelearning/comments/avjwza/neatpython_problem_neuroevolution_of_augmenting/
- https://pastebin.com/XAptFhZj

examples (articles):
https://medium.com/@yashwanthgajji/offline-multiplayer-game-bot-using-the-neat-algorithm-6b2a31afba7f

questions:
https://ai.stackexchange.com/questions/2689/how-does-mating-take-place-in-neat
https://stackoverflow.com/questions/45390481/what-is-neat-neuroevolution-of-augmenting-topologies
https://stackoverflow.com/questions/47898104/adjusted-fitness-in-neat-algorithm
https://stackoverflow.com/questions/50960834/neat-speciating
https://stackoverflow.com/questions/55569260/feedforward-algorithm-in-neat-neural-evolution-of-augmenting-topologies
https://stackoverflow.com/questions/65895442/neat-what-to-do-with-single-member-species

issues:
fix the way disconnected nodes are persisted
fix the context properties, maybe implement a few to realize what's over done
fix the speciation and evolution
provide a way to save the genomes

topological sort:
http://sergebg.blogspot.com/2014/11/non-recursive-dfs-topological-sort.html

random:
//        return () -> -Math.log(1D - (1D - Math.exp(-5D)) * randomSupport.next()) / 5D; // -> negative exponential
//        return () -> Math.log(1D - randomSupport.next()) / -5D; // -> exponential
https://stackoverflow.com/questions/8739851/drawing-random-number-from-a-standard-normal-distribution-using-the-standard-ran
http://www.cs.technion.ac.il/~azlotnik/RandomNumberGenerator.java.html
https://stackoverflow.com/questions/30492259/get-a-random-number-focused-on-center
http://www.mathematik.uni-ulm.de/stochastik/lehre/ss06/markov/BoxMuller.java

//        double min = -5D;
//        double max = 5D;
//        double maxFixed = Math.nextDown(1D);
//
//        return () -> {
//            double value = randomSupport.next();
//            double valueFixed = (value - min) * (max - min) / 100D;
//
//            return Math.min(Math.max(valueFixed, 0D), maxFixed);
//        };

        return () -> {
            double u1 = 1D - randomSupport.next();
            double u2 = 1D - randomSupport.next();
            double r = Math.sqrt(-2D * Math.log(u1));
            double t = 2D * Math.PI * u2;
            double x = r * Math.cos(t);
            double y = r * Math.sin(t);

            return x * y;
        };